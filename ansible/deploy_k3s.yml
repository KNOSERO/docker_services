- name: Ensure remote path exists
  become: true
  file:
    path: "/opt/k3s/{{ server_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'
    recurse: yes

- name: Copy local deployment folder to remote
  become: true
  copy:
    src: "{{ host_path }}"
    dest: "/opt/k3s/"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: preserve

- name: Apply updated deployment
  become: true
  shell: |
    set -e
    kubectl apply -f /opt/k3s/{{ server_dir }}/manifest.yml --kubeconfig={{ kubeconfig_path }}
  args:
    executable: /bin/bash

- name: Delete old pod to force fresh pull of latest image
  become: true
  shell: |
    set -e
    POD=$(kubectl get pod -n {{ namespace }} -l app={{ server_dir }} -o jsonpath="{.items[0].metadata.name}" --kubeconfig={{ kubeconfig_path }})
    kubectl delete pod $POD -n {{ namespace }} --kubeconfig={{ kubeconfig_path }}
  args:
    executable: /bin/bash

- name: Wait for new pod to become ready
  become: true
  shell: |
    set -e
    kubectl rollout status deployment/{{ server_dir }} -n {{ namespace }} --kubeconfig={{ kubeconfig_path }} --timeout=120s
  args:
    executable: /bin/bash

- name: Remove temporary deployment folder
  become: true
  file:
    path: "/opt/k3s/{{ server_dir }}"
    state: absent