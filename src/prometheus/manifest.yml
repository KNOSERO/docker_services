---
apiVersion: v1
kind: Namespace
metadata:
  name: prometheus

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      - job_name: 'onyx'
        static_configs:
          - targets: ['192.168.0.2:9100']
      - job_name: 'ruby'
        static_configs:
          - targets: ['192.168.0.3:9100']
      - job_name: 'home'
        static_configs:
          - targets: ['192.168.0.4:9100']
      - job_name: 'pve'
        static_configs:
          - targets: ['192.168.0.150:9221']
        metrics_path: /pve
        params:
          module: ['default']
#      - job_name: 'cadvisor'
#        static_configs:
#          - targets: ['cadvisor:8080']

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          imagePullPolicy: Always
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config
              mountPath: /etc/prometheus
              readOnly: true
            - name: data
              mountPath: /prometheus
          securityContext:
            runAsUser: 0
      volumes:
        - name: config
          configMap:
            name: prometheus-config
        - name: data
          hostPath:
            path: /mnt/core_data/k3s/prometheus
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: prometheus
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - name: web
      port: 9090
      targetPort: 9090
      nodePort: 30900

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus-docker-registry
  namespace: prometheus
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: prometheus.k3s.ravnet
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090

    - host: prometheus.ravcube.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prometheus
                port:
                  number: 9090